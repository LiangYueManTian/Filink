#spring:
#  application:
#    name: filink-user
#
#  cloud:
#    config:
#      discovery:
#        enabled: true
#        service-id: FILINK-CONFIG
#      profile: dev

#注册服务
eureka:
  client:
    service-url:
      #      向两个eureka注册
      defaultZone: http://10.5.24.143:8861/eureka/

server:
  port: 1001

spring:
  redis:
    host: 10.5.24.142
    database: 0
    port: 6379
    password: filink

#mongodb
  data:
    mongodb:
      uri: mongodb://10.5.24.157:27017/itom

  application:
    name: filink-station-server

  #测试所用数据库连接 后续删除
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    #    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    url: jdbc:mysql://10.5.43.18:3306/filink_sys?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: wistronits@123
    #      初始化大小
    initialSize: 5
    #      最小连接数
    minIdle: 5
    #      最大连接数
    maxActive: 20
    #      获取连接等待超时时间
    maxWait: 60000
    #      间隔多久检测一次 检测需要关闭的空闲连接 单位毫秒
    timeBetweenEvictionRunsMillis: 60000
    #      一个连接最小生存时间
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT1FROMDUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    #      配置监控统计拦截的filter , 去掉后监控sql无法统计wall用于防火墙
    filters: stat,wall,log4j
    logSlowSql: true

  cloud:
    bus:
      refresh:
        enabled: true
    stream:
      kafka:
        binder:
          brokers: 10.5.43.18:9092
          zkNodes: 10.5.43.18:2181
      bindings:
        station_udp_input:
          #         # 输出topic
          destination: filink-station-udp-input
          # 指定消费组 多实例情况下只有一个消费 除非需要所有实例都要消费 否则必须指定
          group: filink_system_server_35
          contentType: application/json
        station_udp_output:
          #   监听topic
          destination: filink-station-udp-input
          contentType: application/json

hystrix:
  command:
    default:
      execution:
        timeout:
          enable: true
        isolation:
          thread:
            timeoutInMilliseconds: 5000

    test:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000

#  配置feign使用熔断
feign:
  hystrix:
    enabled: true


# feign有超时时间的设置，要单独配置ribbon才能生效
ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000

constant:
  port: 8080
  path: /yy_filink/config/protocolConfig.xml