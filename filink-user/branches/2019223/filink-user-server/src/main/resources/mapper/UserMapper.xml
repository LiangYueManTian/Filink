<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fiberhome.filink.userserver.dao.UserDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.fiberhome.filink.userserver.bean.User">
        <id column="id" property="id" />
        <result column="user_code" property="userCode" />
        <result column="user_nickname" property="userNickname" />
        <result column="user_name" property="userName" />
        <result column="user_status" property="userStatus" />
        <result column="dept_id" property="deptId" />
        <result column="role_id" property="roleId" />
        <result column="address" property="address" />
        <result column="phonenumber" property="phonenumber" />
        <result column="email" property="email" />
        <result column="password" property="password" />
        <result column="password_validity_time" property="passwordValidityTime" />
        <result column="userdesc" property="userdesc" />
        <result column="last_login_time" property="lastLoginTime" />
        <result column="last_login_ip" property="lastLoginIp" />
        <result column="is_deleted" property="deleted" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="login_time" property="loginTime" />
        <result column="count_validity_time" property="countValidityTime" />
        <result column="login_sourse" property="loginSourse" />
        <result column="login_type" property="loginType"/>
        <result column="max_users" property="maxUsers"/>
        <result column="loginIp" property="loginIp" />

        <association property="role" column="role_id" javaType="com.fiberhome.filink.userserver.bean.Role">
            <id column="roleId" property="id"/>
            <result column="role_name" property="roleName"/>
        </association>

        <association property="department" column="deptId" javaType="com.fiberhome.filink.userserver.bean.Department">
            <id column="deptId" property="id"/>
            <result column="dept_name" property="deptName"/>
        </association>
    </resultMap>
    <!--查询用户列表-->
    <select id="selectUserList" resultMap="BaseResultMap">
        SELECT
          <include refid="userInfoAllColume" />
        FROM user u ${entityWrapper.sqlSegment()}
    </select>

    <sql id="userInfoAllColume" >
      user.id,user.user_code,user.user_nickname,user.user_name,user.user_status,user.dept_id,user.role_id,user.address,user.phonenumber,
      user.email,user.password,user.count_validity_time,user.userdesc,user.last_login_ip,user.login_type,user.unlocked_time,user.login_sourse,
      user.max_users,user.is_deleted,user.login_time,user.last_login_time,user.create_time,user.loginIp
    </sql>

    <!--删除多个用户-->
    <update id="deleteUser">
        UPDATE user u SET u.`is_deleted`= #{userType} WHERE u.`id` IN
        <foreach collection="userIdArray" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--根据用户id查询用户详情-->
    <select id="queryUserById" resultMap="BaseResultMap">
      SELECT
        <include refid="userInfoAllColume" />
      FROM user WHERE `id` = #{id} AND is_deleted = 0
    </select>

    <!--根据用户名查询用户详情-->
    <select id="queryUserByNmae" resultMap="BaseResultMap">
      SELECT
        <include refid="userInfoAllColume" />
          ,role.id as roleId,role.role_name as role_name
          ,dept.id as deptId,dept.dept_name as dept_name
        FROM
          user as user
          LEFT JOIN role as role ON user.role_id = role.id
          LEFT JOIN department as dept ON user.dept_id = dept.id
        WHERE binary user.user_code = #{userName} AND user.is_deleted = 0
    </select>

    <update id="updateUserStatus">
        UPDATE user u SET u.`user_status`= #{userStatus} WHERE u.`id` IN
        <foreach collection="userIdArray" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="modifyPWD">
        UPDATE `user` SET `password` = #{newPWD}  WHERE id = #{userId}
    </update>

    <select id="queryUserByDepts" resultMap="BaseResultMap">
        SELECT
          <include refid="userInfoAllColume" />
        FROM
          user as user
        WHERE user.is_deleted = 0
        <if test="deptIdArray != null">
            AND user.`dept_id` IN
            <foreach collection="deptIdArray" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="queryUserByRoles" resultMap="BaseResultMap">
        SELECT
          <include refid="userInfoAllColume" />
        FROM
          user as user
        WHERE user.is_deleted = 0 AND user.`role_id` IN
        <foreach collection="roleIdArray" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryUserByField" parameterType="com.fiberhome.filink.userserver.bean.UserParameter"  resultMap="BaseResultMap">
        SELECT
        <include refid="userInfoAllColume" />
        ,role.id as roleId,role.role_name as role_name
        ,dept.id as deptId,dept.dept_name as dept_name
        FROM
        user as user
        LEFT JOIN role as role ON user.role_id = role.id
        LEFT JOIN department as dept ON user.dept_id = dept.id
        <where>
            user.is_deleted = 0
            <if test="userNickname != null">
                AND user.user_nickname LIKE "%${userNickname}%"
            </if>
            <if test="userName != null">
                AND user.user_name LIKE "%${userName}%"
            </if>
            <if test="userCode != null">
                AND user.user_code LIKE "%${userCode}%"
            </if>
            <if test="userStatus != null">
                AND user.user_status = #{userStatus}
            </if>
            <if test="department != null">
                AND dept.dept_name LIKE "%${department}%"
            </if>
            <if test="address != null">
                AND user.address LIKE "%${address}%"
            </if>
            <if test="phonenumber != null">
                AND user.phonenumber LIKE "%${phonenumber}%"
            </if>
            <if test="email != null">
                AND user.email LIKE "%${email}%"
            </if>
            <if test="role != null">
                AND role.role_name LIKE "%${role}%"
            </if>
            <if test="lastLoginIp != null">
                AND user.last_login_ip LIKE "%${lastLoginIp}%"
            </if>
            <if test="userdesc != null">
                AND user.userdesc LIKE "%${userdesc}%"
            </if>
            <if test="loginType != null">
                AND user.login_type = #{loginType}
            </if>
            <if test="lastLoginTime != null">
                AND user.last_login_time
                <if test="lastLoginTimeRelation == 'eq'">
                    =
                </if>
                <if test="lastLoginTimeRelation == 'lt'">
                    &lt;
                </if>
                <if test="lastLoginTimeRelation == 'gt'">
                    &gt;
                </if>
                #{lastLoginTime}
            </if>
        </where>
        <if test="sortProperties == 'department' and sort != null">
            ORDER BY dept.dept_name ${sort}
        </if>
        <if test="sortProperties == 'role' and sort != null">
            ORDER BY role.role_name ${sort}
        </if>
        <if test="sortProperties != null and sortProperties != 'department' and sortProperties != 'role' and sort != null">
            ORDER BY user.${sortProperties} ${sort}
        </if>
        <if test="sort == null">
            ORDER BY user.create_time DESC
        </if>
        LIMIT #{startNum},#{pageSize}
    </select>

    <select id="queryUserNum" parameterType="com.fiberhome.filink.userserver.bean.UserParameter"  resultType="Long">
        SELECT
        count(*)
        FROM
        user as user
        LEFT JOIN role as role ON user.role_id = role.id
        LEFT JOIN department as dept ON user.dept_id = dept.id
        <where>
            user.is_deleted = 0
            <if test="userNickname != null">
                AND user.user_nickname LIKE "%${userNickname}%"
            </if>
            <if test="userName != null">
                AND user.user_name LIKE "%${userName}%"
            </if>
            <if test="userCode != null">
                AND user.user_code LIKE "%${userCode}%"
            </if>
            <if test="userStatus != null">
                AND user.user_status = #{userStatus}
            </if>
            <if test="department != null">
                AND dept.dept_name LIKE "%${department}%"
            </if>
            <if test="address != null">
                AND user.address LIKE "%${address}%"
            </if>
            <if test="phonenumber != null">
                AND user.phonenumber LIKE "%${phonenumber}%"
            </if>
            <if test="email != null">
                AND user.email LIKE "%${email}%"
            </if>
            <if test="role != null">
                AND role.role_name LIKE "%${role}%"
            </if>
            <if test="lastLoginIp != null">
                AND user.last_login_ip LIKE "%${lastLoginIp}%"
            </if>
            <if test="userdesc != null">
                AND user.userdesc LIKE "%${userdesc}%"
            </if>
            <if test="loginType != null">
                AND user.login_type = #{loginType}
            </if>
            <if test="lastLoginTime != null">
                AND user.last_login_time
                <if test="lastLoginTimeRelation == 'eq'">
                    =
                </if>
                <if test="lastLoginTimeRelation == 'lt'">
                    &lt;
                </if>
                <if test="lastLoginTimeRelation == 'gt'">
                    &gt;
                </if>
                #{lastLoginTime}
            </if>
        </where>
        <if test="sortProperties == 'department' and sort != null">
            ORDER BY dept.dept_name ${sort}
        </if>
        <if test="sortProperties == 'role' and sort != null">
            ORDER BY role.role_name ${sort}
        </if>
        <if test="sortProperties != null and sortProperties != 'department' and sortProperties != 'role' and sort != null">
            ORDER BY user.${sortProperties} ${sort}
        </if>
        <if test="sort == null">
            ORDER BY user.create_time DESC
        </if>
    </select>

    <select id="queryUserInfoById" resultMap="BaseResultMap">
        SELECT
          <include refid="userInfoAllColume" />
          ,role.id as roleId,role.role_name as role_name
          ,dept.id as deptId,dept.dept_name as dept_name
        FROM
          user as user
          LEFT JOIN role as role ON user.role_id = role.id
          LEFT JOIN department as dept ON user.dept_id = dept.id
        WHERE user.id = #{userId}
    </select>

    <select id="queryAllUser" resultMap="BaseResultMap">
        SELECT
        <include refid="userInfoAllColume" />
        FROM
          user as user
        WHERE user.is_deleted = 0
    </select>

    <update id="updateUserValidityTime">
        UPDATE user u SET u.`count_validity_time`= #{countValidityTime} WHERE u.`id` = #{id}
    </update>

    <select id="queryUserByUserCode" resultMap="BaseResultMap">
        SELECT
        <include refid="userInfoAllColume" />
        FROM
          user as user
        WHERE user.user_code = #{userCode} AND user.is_deleted = 0
        Limit 1
    </select>
</mapper>
